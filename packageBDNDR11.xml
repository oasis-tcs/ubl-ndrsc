<project default="make" xmlns:if="ant:if" xmlns:unless="ant:unless">

<!--
  $Id: packageBDNDR11.xml,v 1.6 2020/04/15 16:07:26 admin Exp $

  ${dir}/     = base directory into which the results are built
  ${stage}   = project stage suffix to base filename
  ${version} = result package suffix (typically "test" or "CCYYMMDD-hhmmz")
  ${datetimelocal} = Unix date/time stamp (typically "now" or "CCYYMMDD-hhmmz")
-->

<target name="make">
  <echo message="dir=${dir}"/>
  <echo message="stage=${stage}"/>
  <echo message="version=${version}"/>
  <echo message="datetimelocal=${datetimelocal}"/>

  <antcall target="-make-docs"/>
  
  <antcall target="-package"/>
</target>
  
<target name="-check-docs">
  <uptodate targetfile="Business-Document-NDR-v1.1-${stage}.html"
            property=  "docs-NDR-html-okay">
    <srcfiles dir=".">
      <include name="Business-Document-NDR-v1.1-${stage}.xml"/>
      <include name="Business-Document-NDR-v1.1-${stage}-summary.ent"/>
    </srcfiles>
  </uptodate>  
  <uptodate targetfile="Business-Document-NDR-v1.1-${stage}.pdf"
            property=  "docs-NDR-pdf-okay">
    <srcfiles dir=".">
      <include name="Business-Document-NDR-v1.1-${stage}.xml"/>
      <include name="Business-Document-NDR-v1.1-${stage}-summary.ent"/>
    </srcfiles>
  </uptodate>
  <condition property="docs-NDR-okay">
    <and>
      <istrue value="${docs-NDR-html-okay}"/>
      <istrue value="${docs-NDR-pdf-okay}"/>
    </and>
  </condition>
</target>

<target name="-make-docs" depends="-check-docs" unless="docs-NDR-okay">
  <!--remove old results-->
  <delete file="${dir}/Business-Document-NDR-v1.1-${stage}.html"/>
  <delete file="${dir}/Business-Document-NDR-v1.1-${stage}.pdf"/>
  <delete file="${dir}/Business-Document-NDR-v1.1-${stage}-pub.zip"/>
  <!--prepare inputs that are generated rather than authored-->
  <copy todir="${dir}" preservelastmodified="true">
    <fileset dir=".">
      <include name="Business-Document-NDR-v1.1-*"/>
      <include name="art/Business-Document-NDR-v1.1*"/>
      <include name="db/**"/>
    </fileset>
  </copy>
  <echo message="Harvesting rules..."/>
  <java append="true" classname="net.sf.saxon.Transform">
     <arg value="-xsl:massage-NDR.xsl"/>
     <arg value="-s:${dir}/Business-Document-NDR-v1.1-${stage}.xml"/>
     <arg value="-o:${dir}/Business-Document-NDR-v1.1-${stage}-summary.ent"/>
     <arg value="-versionmsg:off"/>
  </java>
  <condition property="useSetarePublishing">
    <and>
      <not>
        <equals arg1="${setareuser}" arg2=""/>
      </not>
      <not>
        <equals arg1="${setarepass}" arg2=""/>
      </not>
    </and>
  </condition>
  <sequential unless:set="useSetarePublishing">
    <echo message="No credentials for remote publishing; creating local HTML presuming stylesheet association..."/>
    <java classname="net.sf.saxon.Transform">
      <arg value="-a"/>
      <arg value="-s:${dir}/Business-Document-NDR-v1.1-${stage}.xml"/>
      <arg value="-o:${dir}/Business-Document-NDR-v1.1-${stage}.html"/>
    </java>
    <available property="html-made" file="${dir}/Business-Document-NDR-v1.1-${stage}.html"/>
    <touch unless:set="html-made" file="${dir}/HTML-FROM-XML-ATTEMPTED-WITHOUT-SUCCESS.txt"/>
    <touch file="${dir}/WITHOUT-CREDENTIALS-PDF-OUTPUT-NOT-ATTEMPTED.txt"/>
  </sequential>
  <sequential if:set="useSetarePublishing">
    <echo message="Using credentials for remote publishing..."/>
    <echo message="Assembling entities..."/>
    <java classname="net.sf.saxon.Transform">
       <arg value="-xsl:assembleEntities.xsl"/>
       <arg value="-s:${dir}/Business-Document-NDR-v1.1-${stage}.xml"/>
       <arg value="-o:${dir}/Business-Document-NDR-v1.1-${stage}-assembled.xml"/>
    </java>
    <move tofile="${dir}/Business-Document-NDR-v1.1-${stage}.xml"
            file="${dir}/Business-Document-NDR-v1.1-${stage}-assembled.xml"/>
    <!--package inputs-->
    <zip destfile="${dir}/Business-Document-NDR-v1.1-${stage}-pub.zip">
      <fileset dir="${dir}">
        <include name="Business-Document-NDR-v1.1-${stage}.xml"/>
        <include name="art/Business-Document-NDR-v1.1-*.png"/>
      </fileset>
    </zip>
    <!--create outputs-->
    <echo message="Submitting print job..."/>
    <property name="serverScript" location="SetareServerAnt.xml"/> 
    <ant antfile="${serverScript}" dir="${dir}">
      <property name="entrypoint" value="OASIS-spec2pdfhtml"/>
      <property name="fileupload"
                value="Business-Document-NDR-v1.1-${stage}-pub.zip"/>
      <property name="dateprefix" value="BDNDR"/>
      <property name="servername" value="run.setaresolutions.com"/>
    </ant>
    <echo message="Check and cleanup..."/>
    <available property="ready-pdf" file="${dir}/Business-Document-NDR-v1.1-${stage}.pdf"/>
    <sequential unless:set="ready-pdf">
      <loadfile property="pdf-errors" srcFile="${dir}/errors.txt"/>
      <echo message="${pdf-errors}"/>
      <echo message="PDF not created"/>
    </sequential>
    <available property="ready-html" file="${dir}/Business-Document-NDR-v1.1-${stage}.html"/>
    <sequential unless:set="ready-html">
      <loadfile property="html-errors" srcFile="${dir}/errors.txt"/>
      <echo message="${html-errors}"/>
      <echo message="HTML not created"/>
    </sequential>
    <condition property="output-ready">
      <and>
        <isset property="ready-pdf"/>
        <isset property="ready-html"/>
      </and>
    </condition>
    <fail unless="output-ready"/>
    <!--these touches are necessary because unzip doesn't preserve time of day-->
    <touch file="${dir}/Business-Document-NDR-v1.1-${stage}.pdf"/>
    <touch file="${dir}/Business-Document-NDR-v1.1-${stage}.html"/>
    <!--intermediate file no longer needed-->
    <delete file="${dir}/Business-Document-NDR-v1.1-${stage}-pub.zip"/>
  </sequential>
</target>

<target name="-package">
  <delete dir="${dir}/Business-Document-NDR-v1.1-${stage}-${version}"/>
  <mkdir dir="${dir}/Business-Document-NDR-v1.1-${stage}-${version}"/>
  <copy todir="${dir}/Business-Document-NDR-v1.1-${stage}-${version}">
    <fileset dir=".">
     <include name="Business-Document-NDR-v1.1-${stage}.xml"/>
     <include name="Business-Document-NDR-v1.1-${stage}-summary.ent"/>
    </fileset>
  </copy>
  <move todir="${dir}/Business-Document-NDR-v1.1-${stage}-${version}">
    <fileset dir="${dir}">
      <include name="Business-Document-NDR-v1.1-${stage}.html"/>
      <include name="Business-Document-NDR-v1.1-${stage}.pdf"/>
      <include name="WITHOUT-CREDENTIALS-PDF-OUTPUT-NOT-ATTEMPTED.txt"/>
      <include name="HTML-FROM-XML-ATTEMPTED-WITHOUT-SUCCESS.txt"/>
    </fileset>
  </move>

  <mkdir dir="${dir}/Business-Document-NDR-v1.1-${stage}-${version}/sample"/>
  <copy todir="${dir}/Business-Document-NDR-v1.1-${stage}-${version}/sample">
    <fileset dir=".">
      <include name="CCTSXML2JSON.xsl"/>
      <include name="readme-CCTSXML2JSON.html"/>
    </fileset>
  </copy>
  
  <mkdir dir="${dir}/Business-Document-NDR-v1.1-${stage}-${version}/jsonschema"/>
  <copy todir="${dir}/Business-Document-NDR-v1.1-${stage}-${version}/jsonschema">
    <fileset dir=".">
      <include name="BDNDR-*.json"/>
    </fileset>
  </copy>
  
  <mkdir dir="${dir}/Business-Document-NDR-v1.1-${stage}-${version}/xsd"/>
  <copy todir="${dir}/Business-Document-NDR-v1.1-${stage}-${version}/xsd">
    <fileset dir=".">
      <include name="BDNDR-*.xsd"/>
    </fileset>
  </copy>
  
  <mkdir dir="${dir}/Business-Document-NDR-v1.1-${stage}-${version}/db"/>
  <copy todir="${dir}/Business-Document-NDR-v1.1-${stage}-${version}/db">
    <fileset dir="db/spec-0.8/htmlruntime">
     <include name="**"/>
    </fileset>
  </copy>

  <mkdir dir="${dir}/Business-Document-NDR-v1.1-${stage}-${version}/art"/>
  <copy todir="${dir}/Business-Document-NDR-v1.1-${stage}-${version}/art">
    <fileset dir="htmlart">
     <include name="Business-Document-NDR-v1.1-**"/>
    </fileset>
  </copy>

  <mkdir dir="${dir}/Business-Document-NDR-v1.1-${stage}-${version}/art/pdf"/>
  <copy todir="${dir}/Business-Document-NDR-v1.1-${stage}-${version}/art/pdf">
    <fileset dir="art">
     <include name="Business-Document-NDR-v1.1-**"/>
    </fileset>
  </copy>

  <delete file="${dir}/Business-Document-NDR-v1.1-${stage}-${version}.zip"/>
  <touch datetime="${datetimelocal}" pattern="yyyyMMdd-HHmm">
    <fileset dir="${dir}/Business-Document-NDR-v1.1-${stage}-${version}"/>
  </touch>

  <zip destfile="${dir}/Business-Document-NDR-v1.1-${stage}-${version}.zip"
       basedir="${dir}" includes="Business-Document-NDR-v1.1-${stage}-${version}/**"/>
  <delete dir="${dir}/Business-Document-NDR-v1.1-${stage}-${version}"/>
  <unzip src="${dir}/Business-Document-NDR-v1.1-${stage}-${version}.zip" 
         dest="${dir}"/>

  <touch datetime="${datetimelocal}" pattern="yyyyMMdd-HHmm">
    <fileset dir="${dir}">
      <include name="Business-Document-NDR-v1.1-${stage}-${version}.zip"/>
    </fileset>
  </touch>
</target>

</project>